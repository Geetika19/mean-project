{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","canActivate","AppModule","declarations","providers","bootstrap","DashboardComponent","HomeComponent","LoginComponent","flashMessage","authService","router","user","username","password","authenticateUser","subscribe","data","success","storeUserData","token","show","cssClass","timeout","navigate","msg","onLoginSubmit","NavbarComponent","logout","ProfileComponent","getProfile","profile","err","console","log","RegisterComponent","validateService","name","email","validateRegister","validateEmail","registerUser","onRegisterSubmit","AuthGuard","loggedIn","AuthService","http","headers","append","post","pipe","res","json","loadToken","authToken","get","localStorage","setItem","JSON","stringify","getItem","clear","providedIn","ValidateService","undefined","re","test","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\r\n<div class = \"container\" style=\"margin-top: 80px\">\r\n    <flash-messages></flash-messages>\r\n    <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule , Routes} from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ValidateService } from './services/validate.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { AuthService } from './services/auth.service';\nimport { HttpModule } from '@angular/http';\nimport { AuthGuard} from './guards/auth.guard';\n\nconst appRoutes : Routes = [\n  { path : '' , component : HomeComponent},\n  { path : 'register' , component : RegisterComponent},\n  { path : 'login' , component : LoginComponent},\n  { path : 'dashboard' , component : DashboardComponent , canActivate : [AuthGuard]},\n  { path : 'profile' , component : ProfileComponent , canActivate : [AuthGuard]}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    HttpModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [ValidateService , AuthService , AuthGuard] ,\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","  \n<h2 class=\"page-header\">Dashboard</h2>\n<p>Welcome to your Dashboard</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n    <h1>MEAN Authentication App</h1>\n    <p class=\"lead\">Welcome to our custom MEAN authentication application built from scratch </p>\n    <div>\n      <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a> <a class=\"btn btn-dark\" [routerLink]=\"['/login']\">Login</a>\n    </div>\n  </div>\n  \n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <h3>Express Backend</h3>\n      <p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\n    </div>\n    <div class=\"col-md-4\">\n      <h3>Angular-CLI</h3>\n      <p>Angular-CLI to generate components, services and more. Local dev server and easy compilation</p>\n    </div>\n    <div class=\"col-md-4\">\n      <h3>JWT Tokens</h3>\n      <p>Full featured authentication using JSON web tokens. Login and store user data</p>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username : String;\n  password : String;\n\n  constructor(  \n    private flashMessage : FlashMessagesService ,\n    private authService : AuthService,\n    private router : Router ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username : this.username,\n      password : this.password\n    }\n  \n\n  this.authService.authenticateUser(user).subscribe(data => {\n      if(data.success) {\n        this.authService.storeUserData(data.token , data.user);\n        this.flashMessage.show( \"You are now Logged In\", { cssClass: 'alert-success' , timeout : 2000 });\n          this.router.navigate(['/dashboard']);\n      }else {\n        this.flashMessage.show( data.msg, { cssClass: 'alert-danger' , timeout : 2000 });\n          this.router.navigate(['/login']);\n      }\n\n  });\n}\n\n}\n","<h2 class=\"page-header\" >Login</h2>\n<form class=\"form-signin\" (submit)=\"onLoginSubmit()\">\n        <div class=\"form-group\">\n          <label for=\"Username\">Username</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Enter Username\" [(ngModel)]=\"username\" name=\"username\">\n        </div>\n        <div class=\"form-group\">\n        <label for=\"Password\">Password</label>\n        <input type=\"password\" class=\"form-control\" placeholder=\" Enter Password\" [(ngModel)]=\"password\" name=\"password\">\n        </div>\n        <div class=\"checkbox\">\n          <label>\n            <input type=\"checkbox\" value=\"remember-me\"> Remember me\n          </label>\n        </div>\n        <input class=\"btn btn-lg btn-primary\" type=\"submit\" value=\"Login\">\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private flashMessage : FlashMessagesService ,\n    public authService : AuthService,\n    private router : Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.show( \"Successfully Logged Out\", { cssClass: 'alert-success' , timeout : 2000 });\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n    <a class=\"navbar-brand\" href=\"#\">MEAN Auth App</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\n          <a class=\"nav-link\" [routerLink]=\"['/']\">Home <span></span></a>\n        </li>\n      </ul>\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item\" *ngIf = \"authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\n          <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">Dashboard </a>\n        </li>\n        <li class=\"nav-item\" *ngIf = \"authService.loggedIn()\"  [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\n          <a class=\"nav-link\" [routerLink]=\"['/profile']\">Profile </a>\n        </li>\n        <li class=\"nav-item\" *ngIf = \"!authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\n          <a class=\"nav-link\" [routerLink]=\"['/login']\">Login </a>\n        </li>\n        <li class=\"nav-item\"  *ngIf = \"!authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\n          <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n        </li>\n        <li class=\"nav-item\" *ngIf = \"authService.loggedIn()\"><a (click) = \"onLogoutClick()\" class=\"nav-link\"  href=\"#\">Logout</a>\n        </li>\n      </ul>\n    </div>\n  </nav>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  public user : {name : '' , username : '' ,email : '' ,password : ''};\n  constructor(\n    public authService : AuthService,\n    private router : Router\n    ) { }\n\n  ngOnInit(){\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n\n","<div *ngIf=\"user\">\n    <h2 class=\"page-header\">{{user.name}}</h2>\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\">Username : {{user.username}}</li>\n      <li class=\"list-group-item\">Email : {{user.email}}</li>\n    </ul>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService} from '../../services/validate.service';\nimport { AuthService} from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name : String ;\n  username : String;\n  email : String;\n  password : String ;\n\n  constructor(\n    private validateService : ValidateService , \n    private flashMessage : FlashMessagesService ,\n    private authService : AuthService,\n    private router : Router\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name : this.name,\n      email : this.email,\n      username : this.username,\n      password : this.password\n    }\n    //Require all filelds\n    if(!this.validateService.validateRegister(user)) {\n      this.flashMessage.show(\"Please fill in all the fields\" , { cssClass: 'alert-danger' , timeout : 2000 });\n      return false;\n    }\n    //checking valid email\n    if(!this.validateService.validateEmail(user.email)) {\n      this.flashMessage.show(\"Please Use a valid Email\" , { cssClass: 'alert-danger' , timeout : 2000 });\n      return false;\n    }\n   \n    this.authService.registerUser(user).subscribe(data => {\n        if(data.success) {\n          this.flashMessage.show(\"You are now registered and can login\" , { cssClass: 'alert-success' , timeout : 2000 });\n          this.router.navigate(['/login']);\n        }else {\n          this.flashMessage.show(\"Something went Wrong\" , { cssClass: 'alert-success' , timeout : 2000 });\n          this.router.navigate(['/register']);\n        }\n    });\n\n  }\n\n}\n","<div>\n    <h2 class=\"page-header\">Register</h2>\n    <form (submit)=\"onRegisterSubmit()\" >\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Enter Name\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" id=\"username\" placeholder=\"Enter Username\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email\">\n        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"password\" placeholder=\" Enter Password\">\n      </div>\n      <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n    </form>\n    </div>\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor (public authService:AuthService, private router:Router){\r\n\r\n  }\r\n\r\n  canActivate() {\r\n    if(this.authService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { Http,Headers} from '@angular/http';\nimport { map } from 'rxjs/Operators';\n\nimport {tokenNotExpired} from 'angular2-jwt';\nimport { HttpModule } from '@angular/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken  : any;\n  user : any;\n\n  constructor(private http : Http) { }\n\n  registerUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type' ,'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  authenticateUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type' ,'application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  getProfile() {\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization' , this.authToken);\n    headers.append('Content-Type' ,'application/json');\n    return this.http.get('http://localhost:3000/users/profile', {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  storeUserData(token , user) {\n    localStorage.setItem('id_token' , token);\n    localStorage.setItem('user' , JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn() {\n    return tokenNotExpired('id_token');\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined) {\n        return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}