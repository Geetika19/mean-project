{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/guards/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/validate.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAyC;AACc;;;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;;;;;AAOnC,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,aAAa,CAAC;KACvB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;QACzB,yEACI;QAAA,4EAAiC;QACjC,2EAA+B;QACnC,4DAAM;;6FDGO,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACa;AACT;AACW;AACT;AACwB;AACH;AACS;AACZ;AACe;AACN;AACZ;AACA;AACR;AACX;AACI;;;;AAE/C,MAAM,SAAS,GAAY;IACzB,EAAE,IAAI,EAAG,EAAE,EAAG,SAAS,EAAG,6EAAa,EAAC;IACxC,EAAE,IAAI,EAAG,UAAU,EAAG,SAAS,EAAG,yFAAiB,EAAC;IACpD,EAAE,IAAI,EAAG,OAAO,EAAG,SAAS,EAAG,gFAAc,EAAC;IAC9C,EAAE,IAAI,EAAG,WAAW,EAAG,SAAS,EAAG,6FAAkB,EAAG,WAAW,EAAG,CAAC,6DAAS,CAAC,EAAC;IAClF,EAAE,IAAI,EAAG,SAAS,EAAG,SAAS,EAAG,uFAAgB,EAAG,WAAW,EAAG,CAAC,6DAAS,CAAC,EAAC;CAC/E;AAuBM,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,2EAAe,EAAG,mEAAW,EAAG,6DAAS,CAAC,YAR7C;YACP,yDAAU;YACV,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;YAC/B,4EAAmB,CAAC,OAAO,EAAE;SAC9B;mIAIU,SAAS,mBAnBlB,2DAAY;QACZ,mFAAe;QACf,gFAAc;QACd,yFAAiB;QACjB,6EAAa;QACb,6FAAkB;QAClB,uFAAgB,aAGhB,yDAAU;QACV,uEAAa;QACb,oEAAgB;QAChB,0DAAW;6FAOF,SAAS;cArBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;oBACZ,mFAAe;oBACf,gFAAc;oBACd,yFAAiB;oBACjB,6EAAa;oBACb,6FAAkB;oBAClB,uFAAgB;iBACjB;gBACD,OAAO,EAAE;oBACP,yDAAU;oBACV,uEAAa;oBACb,oEAAgB;oBAChB,0DAAW;oBACX,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;oBAC/B,4EAAmB,CAAC,OAAO,EAAE;iBAC9B;gBACD,SAAS,EAAE,CAAC,2EAAe,EAAG,mEAAW,EAAG,6DAAS,CAAC;gBACtD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC9CD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,kBAAkB;IAE7B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;oFALU,kBAAkB;kGAAlB,kBAAkB;QCN/B,wEAAwB;QAAA,oEAAS;QAAA,4DAAK;QACtC,oEAAG;QAAA,oFAAyB;QAAA,4DAAI;;6FDKnB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,eAAe;gBACzB,WAAW,EAAE,4BAA4B;gBACzC,SAAS,EAAE,CAAC,2BAA2B,CAAC;aACzC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAkD;;;;;AAO3C,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCP1B,yEACI;QAAA,qEAAI;QAAA,kFAAuB;QAAA,4DAAK;QAChC,uEAAgB;QAAA,oIAAyE;QAAA,4DAAI;QAC7F,sEACE;QAAA,uEAAwD;QAAA,mEAAQ;QAAA,4DAAI;QAAC,uEAAkD;QAAA,gEAAK;QAAA,4DAAI;QAClI,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,0EACE;QAAA,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,qEAAG;QAAA,wJAA4F;QAAA,4DAAI;QACrG,4DAAM;QACN,0EACE;QAAA,sEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,qEAAG;QAAA,wJAA4F;QAAA,4DAAI;QACrG,4DAAM;QACN,0EACE;QAAA,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QACnB,qEAAG;QAAA,yIAA6E;QAAA,4DAAI;QACtF,4DAAM;QACR,4DAAM;;QAjByB,0DAA4B;QAA5B,6IAA4B;QAAsC,0DAAyB;QAAzB,6IAAyB;;6FDG/G,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;AAU3C,MAAM,cAAc;IAKzB,YACU,YAAmC,EACnC,WAAyB,EACzB,MAAe;QAFf,iBAAY,GAAZ,YAAY,CAAuB;QACnC,gBAAW,GAAX,WAAW,CAAc;QACzB,WAAM,GAAN,MAAM,CAAS;IAAK,CAAC;IAE/B,QAAQ;IACR,CAAC;IAED,aAAa;QACX,MAAM,IAAI,GAAG;YACX,QAAQ,EAAG,IAAI,CAAC,QAAQ;YACxB,QAAQ,EAAG,IAAI,CAAC,QAAQ;SACzB;QAGH,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACrD,IAAG,IAAI,CAAC,OAAO,EAAE;gBACf,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAG,IAAI,CAAC,IAAI,CAAC,CAAC;gBACvD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,uBAAuB,EAAE,EAAE,QAAQ,EAAE,eAAe,EAAG,OAAO,EAAG,IAAI,EAAE,CAAC,CAAC;gBAC/F,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;aACxC;iBAAK;gBACJ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,IAAI,CAAC,GAAG,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAG,OAAO,EAAG,IAAI,EAAE,CAAC,CAAC;gBAC/E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aACpC;QAEL,CAAC,CAAC,CAAC;IACL,CAAC;;4EA/BY,cAAc;8FAAd,cAAc;QCV3B,wEAAyB;QAAA,gEAAK;QAAA,4DAAK;QACnC,0EACQ;QADkB,sIAAU,mBAAe,IAAC;QAC5C,yEACE;QAAA,2EAAsB;QAAA,mEAAQ;QAAA,4DAAQ;QACtC,2EACF;QADuE,oLAAsB;QAA3F,4DACF;QAAA,4DAAM;QACN,yEACA;QAAA,2EAAsB;QAAA,mEAAQ;QAAA,4DAAQ;QACtC,4EACA;QAD0E,qLAAsB;QAAhG,4DACA;QAAA,4DAAM;QACN,0EACE;QAAA,yEACE;QAAA,uEAA4C;QAAA,yEAC9C;QAAA,4DAAQ;QACV,4DAAM;QACN,uEACR;QAAA,4DAAO;;QAZwE,0DAAsB;QAAtB,iFAAsB;QAInB,0DAAsB;QAAtB,iFAAsB;;6FDE3F,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;ICa1C,wEACE;IAAA,uEAAkD;IAAA,qEAAU;IAAA,4DAAI;IAClE,4DAAK;;IAFiD,mJAA+B;IAC/D,0DAA6B;IAA7B,6IAA6B;;;;IAEnD,wEACE;IAAA,uEAAgD;IAAA,mEAAQ;IAAA,4DAAI;IAC9D,4DAAK;;IAFkD,mJAA+B;IAChE,0DAA2B;IAA3B,6IAA2B;;;;IAEjD,wEACE;IAAA,uEAA8C;IAAA,iEAAM;IAAA,4DAAI;IAC1D,4DAAK;;IAFkD,mJAA+B;IAChE,0DAAyB;IAAzB,6IAAyB;;;;IAE/C,wEACE;IAAA,uEAAiD;IAAA,mEAAQ;IAAA,4DAAI;IAC/D,4DAAK;;IAFmD,mJAA+B;IACjE,0DAA4B;IAA5B,6IAA4B;;;;IAElD,yEAAsD;IAAA,wEAA0D;IAAvD,kTAA2B;IAA4B,iEAAM;IAAA,4DAAI;IAC1H,4DAAK;;;ADhBN,MAAM,eAAe;IAE1B,YACU,YAAmC,EACpC,WAAyB,EACxB,MAAe;QAFf,iBAAY,GAAZ,YAAY,CAAuB;QACpC,gBAAW,GAAX,WAAW,CAAc;QACxB,WAAM,GAAN,MAAM,CAAS;IACrB,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,aAAa;QACX,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAE,yBAAyB,EAAE,EAAE,QAAQ,EAAE,eAAe,EAAG,OAAO,EAAG,IAAI,EAAE,CAAC,CAAC;QACnG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,OAAO,KAAK,CAAC;IACf,CAAC;;8EAhBU,eAAe;+FAAf,eAAe;QCV5B,yEACI;QAAA,uEAAiC;QAAA,wEAAa;QAAA,4DAAI;QAClD,4EACE;QAAA,qEAAyC;QAC3C,4DAAS;QAET,yEACE;QAAA,wEACE;QAAA,wEACE;QAAA,uEAAyC;QAAA,gEAAK;QAAA,mEAAa;QAAA,4DAAI;QACjE,4DAAK;QACP,4DAAK;QACL,yEACE;QAAA,2GACE;QAEF,2GACE;QAEF,2GACE;QAEF,2GACE;QAEF,4GAAsD;QAExD,4DAAK;QACP,4DAAM;QACR,4DAAM;;QArBqB,0DAA+B;QAA/B,mJAA+B;QAC9B,0DAAoB;QAApB,8IAAoB;QAIrB,0DAAgC;QAAhC,4FAAgC;QAGhC,0DAAgC;QAAhC,4FAAgC;QAGhC,0DAAiC;QAAjC,6FAAiC;QAGhC,0DAAiC;QAAjC,6FAAiC;QAGlC,0DAAgC;QAAhC,4FAAgC;;6FDfhD,eAAe;cAL3B,uDAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICAlD,sEACI;IAAA,wEAAwB;IAAA,uDAAa;IAAA,4DAAK;IAC1C,wEACE;IAAA,wEAA4B;IAAA,uDAA4B;IAAA,4DAAK;IAC7D,wEAA4B;IAAA,uDAAsB;IAAA,4DAAK;IACzD,4DAAK;IACP,4DAAM;;;IALoB,0DAAa;IAAb,iFAAa;IAEP,0DAA4B;IAA5B,yGAA4B;IAC5B,0DAAsB;IAAtB,mGAAsB;;ADMjD,MAAM,gBAAgB;IAE3B,YACS,WAAyB,EACxB,MAAe;QADhB,gBAAW,GAAX,WAAW,CAAc;QACxB,WAAM,GAAN,MAAM,CAAS;IACnB,CAAC;IAEP,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YAChD,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QAC3B,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IACL,CAAC;;gFAfU,gBAAgB;gGAAhB,gBAAgB;QCV7B,4GACI;;QADC,0EAAY;;6FDUJ,gBAAgB;cAL5B,uDAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;AETD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;;AAY3C,MAAM,iBAAiB;IAM5B,YACU,eAAiC,EACjC,YAAmC,EACnC,WAAyB,EACzB,MAAe;QAHf,oBAAe,GAAf,eAAe,CAAkB;QACjC,iBAAY,GAAZ,YAAY,CAAuB;QACnC,gBAAW,GAAX,WAAW,CAAc;QACzB,WAAM,GAAN,MAAM,CAAS;IACnB,CAAC;IAEP,QAAQ;IACR,CAAC;IAED,gBAAgB;QACd,MAAM,IAAI,GAAG;YACX,IAAI,EAAG,IAAI,CAAC,IAAI;YAChB,KAAK,EAAG,IAAI,CAAC,KAAK;YAClB,QAAQ,EAAG,IAAI,CAAC,QAAQ;YACxB,QAAQ,EAAG,IAAI,CAAC,QAAQ;SACzB;QACD,qBAAqB;QACrB,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;YAC/C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,+BAA+B,EAAG,EAAE,QAAQ,EAAE,cAAc,EAAG,OAAO,EAAG,IAAI,EAAE,CAAC,CAAC;YACxG,OAAO,KAAK,CAAC;SACd;QACD,sBAAsB;QACtB,IAAG,CAAC,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAClD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0BAA0B,EAAG,EAAE,QAAQ,EAAE,cAAc,EAAG,OAAO,EAAG,IAAI,EAAE,CAAC,CAAC;YACnG,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjD,IAAG,IAAI,CAAC,OAAO,EAAE;gBACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,sCAAsC,EAAG,EAAE,QAAQ,EAAE,eAAe,EAAG,OAAO,EAAG,IAAI,EAAE,CAAC,CAAC;gBAChH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;aAClC;iBAAK;gBACJ,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,sBAAsB,EAAG,EAAE,QAAQ,EAAE,eAAe,EAAG,OAAO,EAAG,IAAI,EAAE,CAAC,CAAC;gBAChG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;QACL,CAAC,CAAC,CAAC;IAEL,CAAC;;kFA5CU,iBAAiB;iGAAjB,iBAAiB;QCZ9B,sEACI;QAAA,wEAAwB;QAAA,mEAAQ;QAAA,4DAAK;QACrC,0EACE;QADI,yIAAU,sBAAkB,IAAC;QACjC,yEACE;QAAA,2EAAkB;QAAA,+DAAI;QAAA,4DAAQ;QAC9B,2EACF;QADqB,mLAAkB;QAArC,4DACF;QAAA,4DAAM;QACN,yEACE;QAAA,2EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,4EACF;QADqB,wLAAsB;QAAzC,4DACF;QAAA,4DAAM;QACN,0EACE;QAAA,4EAAmB;QAAA,iEAAK;QAAA,4DAAQ;QAChC,4EACA;QADoB,qLAAmB;QAAvC,4DACA;QAAA,4EAAmD;QAAA,0GAA8C;QAAA,4DAAQ;QAC3G,4DAAM;QACN,0EACE;QAAA,6EAAsB;QAAA,oEAAQ;QAAA,4DAAQ;QACtC,6EACF;QADyB,wLAAsB;QAA7C,4DACF;QAAA,4DAAM;QACN,wEACF;QAAA,4DAAO;QACP,4DAAM;;QAjBiB,0DAAkB;QAAlB,6EAAkB;QAIlB,0DAAsB;QAAtB,iFAAsB;QAIrB,0DAAmB;QAAnB,8EAAmB;QAKhB,0DAAsB;QAAtB,iFAAsB;;6FDNxC,iBAAiB;cAL7B,uDAAS;eAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,WAAW,EAAE,2BAA2B;gBACxC,SAAS,EAAE,CAAC,0BAA0B,CAAC;aACxC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAA2C;;;;AAKpC,MAAM,SAAS;IACpB,YAAoB,WAAuB,EAAU,MAAa;QAA9C,gBAAW,GAAX,WAAW,CAAY;QAAU,WAAM,GAAN,MAAM,CAAO;IAElE,CAAC;IAED,WAAW;QACT,IAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,EAAE;YAC9B,OAAO,IAAI,CAAC;SACb;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;kEAZU,SAAS;4FAAT,SAAS,WAAT,SAAS;6FAAT,SAAS;cADrB,wDAAU;;;;;;;;;;;;;;ACJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACC;AACP;AAEQ;;;AAOtC,MAAM,WAAW;IAItB,YAAoB,IAAW;QAAX,SAAI,GAAJ,IAAI,CAAO;IAAI,CAAC;IAEpC,YAAY,CAAC,IAAI;QACf,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sCAAsC,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aACpF,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,gBAAgB,CAAC,IAAI;QACnB,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0CAA0C,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aACxF,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,UAAU;QACR,IAAI,OAAO,GAAG,IAAI,qDAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,OAAO,CAAC,MAAM,CAAC,eAAe,EAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QACjD,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qCAAqC,EAAE,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;aAC5E,IAAI,CAAC,0DAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,aAAa,CAAC,KAAK,EAAG,IAAI;QACxB,YAAY,CAAC,OAAO,CAAC,UAAU,EAAG,KAAK,CAAC,CAAC;QACzC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,SAAS;QACP,MAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,QAAQ;QACN,OAAO,oEAAe,CAAC,UAAU,CAAC,CAAC;IACrC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,YAAY,CAAC,KAAK,EAAE,CAAC;IACvB,CAAC;;sEAjDU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAA2C;;AAKpC,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,gBAAgB,CAAC,IAAI;QACnB,IAAG,IAAI,CAAC,IAAI,IAAI,SAAS,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAE;YAC9G,OAAO,KAAK,CAAC;SAChB;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,aAAa,CAAC,KAAK;QACjB,MAAM,EAAE,GAAG,yJAAyJ,CAAC;QACrK,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;;8EAfU,eAAe;kGAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;6FAEP,eAAe;cAH3B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACJD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\r\n<div class = \"container\" style=\"margin-top: 80px\">\r\n    <flash-messages></flash-messages>\r\n    <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule , Routes} from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ValidateService } from './services/validate.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { AuthService } from './services/auth.service';\nimport { HttpModule } from '@angular/http';\nimport { AuthGuard} from './guards/auth.guard';\n\nconst appRoutes : Routes = [\n  { path : '' , component : HomeComponent},\n  { path : 'register' , component : RegisterComponent},\n  { path : 'login' , component : LoginComponent},\n  { path : 'dashboard' , component : DashboardComponent , canActivate : [AuthGuard]},\n  { path : 'profile' , component : ProfileComponent , canActivate : [AuthGuard]}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    HttpModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [ValidateService , AuthService , AuthGuard] ,\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","  \n<h2 class=\"page-header\">Dashboard</h2>\n<p>Welcome to your Dashboard</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n    <h1>MEAN Authentication App</h1>\n    <p class=\"lead\">Welcome to our custom MEAN authentication application built from scratch </p>\n    <div>\n      <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a> <a class=\"btn btn-dark\" [routerLink]=\"['/login']\">Login</a>\n    </div>\n  </div>\n  \n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <h3>Express Backend</h3>\n      <p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\n    </div>\n    <div class=\"col-md-4\">\n      <h3>Angular-CLI</h3>\n      <p>Angular-CLI to generate components, services and more. Local dev server and easy compilation</p>\n    </div>\n    <div class=\"col-md-4\">\n      <h3>JWT Tokens</h3>\n      <p>Full featured authentication using JSON web tokens. Login and store user data</p>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  username : String;\n  password : String;\n\n  constructor(  \n    private flashMessage : FlashMessagesService ,\n    private authService : AuthService,\n    private router : Router ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLoginSubmit() {\n    const user = {\n      username : this.username,\n      password : this.password\n    }\n  \n\n  this.authService.authenticateUser(user).subscribe(data => {\n      if(data.success) {\n        this.authService.storeUserData(data.token , data.user);\n        this.flashMessage.show( \"You are now Logged In\", { cssClass: 'alert-success' , timeout : 2000 });\n          this.router.navigate(['/dashboard']);\n      }else {\n        this.flashMessage.show( data.msg, { cssClass: 'alert-danger' , timeout : 2000 });\n          this.router.navigate(['/login']);\n      }\n\n  });\n}\n\n}\n","<h2 class=\"page-header\" >Login</h2>\n<form class=\"form-signin\" (submit)=\"onLoginSubmit()\">\n        <div class=\"form-group\">\n          <label for=\"Username\">Username</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"Enter Username\" [(ngModel)]=\"username\" name=\"username\">\n        </div>\n        <div class=\"form-group\">\n        <label for=\"Password\">Password</label>\n        <input type=\"password\" class=\"form-control\" placeholder=\" Enter Password\" [(ngModel)]=\"password\" name=\"password\">\n        </div>\n        <div class=\"checkbox\">\n          <label>\n            <input type=\"checkbox\" value=\"remember-me\"> Remember me\n          </label>\n        </div>\n        <input class=\"btn btn-lg btn-primary\" type=\"submit\" value=\"Login\">\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(\n    private flashMessage : FlashMessagesService ,\n    public authService : AuthService,\n    private router : Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this.flashMessage.show( \"Successfully Logged Out\", { cssClass: 'alert-success' , timeout : 2000 });\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n    <a class=\"navbar-brand\" href=\"#\">MEAN Auth App</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n      <ul class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\n          <a class=\"nav-link\" [routerLink]=\"['/']\">Home <span></span></a>\n        </li>\n      </ul>\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item\" *ngIf = \"authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\n          <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">Dashboard </a>\n        </li>\n        <li class=\"nav-item\" *ngIf = \"authService.loggedIn()\"  [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\n          <a class=\"nav-link\" [routerLink]=\"['/profile']\">Profile </a>\n        </li>\n        <li class=\"nav-item\" *ngIf = \"!authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\n          <a class=\"nav-link\" [routerLink]=\"['/login']\">Login </a>\n        </li>\n        <li class=\"nav-item\"  *ngIf = \"!authService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions] = \"{exact:true}\">\n          <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n        </li>\n        <li class=\"nav-item\" *ngIf = \"authService.loggedIn()\"><a (click) = \"onLogoutClick()\" class=\"nav-link\"  href=\"#\">Logout</a>\n        </li>\n      </ul>\n    </div>\n  </nav>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  public user : {name : '' , username : '' ,email : '' ,password : ''};\n  constructor(\n    public authService : AuthService,\n    private router : Router\n    ) { }\n\n  ngOnInit(){\n    this.authService.getProfile().subscribe(profile => {\n      this.user = profile.user;\n    },\n    err => {\n      console.log(err);\n      return false;\n    });\n  }\n\n}\n\n","<div *ngIf=\"user\">\n    <h2 class=\"page-header\">{{user.name}}</h2>\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\">Username : {{user.username}}</li>\n      <li class=\"list-group-item\">Email : {{user.email}}</li>\n    </ul>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService} from '../../services/validate.service';\nimport { AuthService} from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name : String ;\n  username : String;\n  email : String;\n  password : String ;\n\n  constructor(\n    private validateService : ValidateService , \n    private flashMessage : FlashMessagesService ,\n    private authService : AuthService,\n    private router : Router\n    ) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name : this.name,\n      email : this.email,\n      username : this.username,\n      password : this.password\n    }\n    //Require all filelds\n    if(!this.validateService.validateRegister(user)) {\n      this.flashMessage.show(\"Please fill in all the fields\" , { cssClass: 'alert-danger' , timeout : 2000 });\n      return false;\n    }\n    //checking valid email\n    if(!this.validateService.validateEmail(user.email)) {\n      this.flashMessage.show(\"Please Use a valid Email\" , { cssClass: 'alert-danger' , timeout : 2000 });\n      return false;\n    }\n   \n    this.authService.registerUser(user).subscribe(data => {\n        if(data.success) {\n          this.flashMessage.show(\"You are now registered and can login\" , { cssClass: 'alert-success' , timeout : 2000 });\n          this.router.navigate(['/login']);\n        }else {\n          this.flashMessage.show(\"Something went Wrong\" , { cssClass: 'alert-success' , timeout : 2000 });\n          this.router.navigate(['/register']);\n        }\n    });\n\n  }\n\n}\n","<div>\n    <h2 class=\"page-header\">Register</h2>\n    <form (submit)=\"onRegisterSubmit()\" >\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\" id=\"name\" placeholder=\"Enter Name\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" id=\"username\" placeholder=\"Enter Username\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter Email\">\n        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" id=\"password\" placeholder=\" Enter Password\">\n      </div>\n      <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n    </form>\n    </div>\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor (public authService:AuthService, private router:Router){\r\n\r\n  }\r\n\r\n  canActivate() {\r\n    if(this.authService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { Http,Headers} from '@angular/http';\nimport { map } from 'rxjs/Operators';\n\nimport {tokenNotExpired} from 'angular2-jwt';\nimport { HttpModule } from '@angular/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken  : any;\n  user : any;\n\n  constructor(private http : Http) { }\n\n  registerUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type' ,'application/json');\n    return this.http.post('http://localhost:3000/users/register', user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  authenticateUser(user) {\n    let headers = new Headers();\n    headers.append('Content-Type' ,'application/json');\n    return this.http.post('http://localhost:3000/users/authenticate', user, {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  getProfile() {\n    let headers = new Headers();\n    this.loadToken();\n    headers.append('Authorization' , this.authToken);\n    headers.append('Content-Type' ,'application/json');\n    return this.http.get('http://localhost:3000/users/profile', {headers: headers})\n      .pipe(map(res => res.json()));\n  }\n\n  storeUserData(token , user) {\n    localStorage.setItem('id_token' , token);\n    localStorage.setItem('user' , JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  loggedIn() {\n    return tokenNotExpired('id_token');\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if(user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined) {\n        return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}